/*!
 *  BayLang Technology
 *
 *  (c) Copyright 2016-2025 "Ildar Bikmamatov" <support@bayrell.org>
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

namespace Runtime.Admin.Components.Pages.UserPage;

use Runtime.Serializer;
use Runtime.Web.ModelFactory;
use Runtime.Web.RenderContainer;
use Runtime.Widget.Input;
use Runtime.Widget.Label;
use Runtime.Widget.Crud.Pages.DialogPageModel;
use Runtime.Admin.Components.Pages.UserPage.UserPage;


class UserPageModel extends DialogPageModel
{
	string component_name = classof UserPage;
	
	
	/**
	 * Returns api name
	 */
	string getApiName(string action)
	{
		if (action == "save") return "admin.users.save";
		if (action == "search") return "admin.users.search";
		return "";
	}
	
	
	/**
	 * Returns primary key
	 */
	Collection getPrimaryKey() => ["id"];
	
	
	/**
	 * Returns item fields
	 */
	Collection getItemFields() =>
	[
		"id",
		"name",
		"login",
	];
	
	
	/**
	 * Returns form fields
	 */
	Collection getFormFields(string action) =>
	[
		{
			"name": "login",
			"label": "Login",
			"component": classof Input,
		},
		{
			"name": "name",
			"label": "Name",
			"component": classof Input,
		},
	];
	
	
	/**
	 * Returns table fields
	 */
	Collection getTableFields(string action) =>
	[
		{
			"name": "row_number",
		},
		{
			"name": "login",
			"label": "Login",
			"component": classof Label,
		},
		{
			"name": "name",
			"label": "Name",
			"component": classof Label,
		},
		{
			"name": "row_buttons",
			"model": new ModelFactory(
				"Runtime.Widget.Table.TableRowButtonsModel"
			),
		}
	];
	
	
	/**
	 * Table title
	 */
	string getTableTitle(Dict params)
	{
		string action = params.get("action");
		Dict item = params.get("item");
		if (action == "add")
		{
			return "Add user";
		}
		if (action == "edit")
		{
			return "Edit user " ~ item.get("name");
		}
		if (action == "delete")
		{
			return "Delete user " ~ item.get("name");
		}
		return "";
	}
	
	
	/**
	 * Process frontend data
	 */
	void serialize(Serializer serializer, Map data)
	{
		parent(serializer, data);
	}
	
	
	/**
	 * Init widget settings
	 */
	void initParams(Dict params)
	{
		parent(params);
	}
	
	
	/**
	 * Init widget settings
	 */
	void initWidget(Dict params)
	{
		parent(params);
	}
	
	
	/**
	 * Build title
	 */
	void buildTitle(RenderContainer container)
	{
		container.layout.setPageTitle("Users list");
	}
}